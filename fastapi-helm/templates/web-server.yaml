apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName.web }}
  namespace:  {{ .Values.namespace }}
  labels:
    app: {{ .Values.appName.web }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.appName.web }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName.web }}
    spec:
      containers:
      - name: {{ .Values.appName.web }}
        image: {{ .Values.image.webServer }}
        imagePullPolicy: Never
        resources:
          limits:
            memory: "200Mi"
            cpu: "500m"
        ports:
          - containerPort: {{ .Values.port.webServer }}
        env:
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.configMap.redis }}
                key: hostname
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.configMap.redis }}
                key: port
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                  name: {{ .Values.secretKey.redis }}
                  key: db_password
          - name: MODEL_SERVER_URL
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.configMap.modelServer }}
                key: model_server_url

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.appName.web }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: {{ .Values.appName.web }}
  ports:
  - port: {{ .Values.port.webServer }}
    targetPort: {{ .Values.port.webServer }}

    
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.appName.web }} 
  namespace: {{ .Values.namespace }}
spec:
  rules:
    - host: {{ .Values.hostname }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.appName.web }} 
                port:
                  number: {{ .Values.port.webServer }}
