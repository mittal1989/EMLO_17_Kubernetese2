apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ .Values.appName.model }}
    namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.appName.model }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName.model }}
    spec:
      containers:
      - name: {{ .Values.appName.model }}
        image: {{ .Values.image.modelServer }}
        imagePullPolicy: Never
        resources:
          limits:
            memory: "2000Mi"
            cpu: "500m"
        ports:
        - containerPort: {{ .Values.port.modelServer }}
        env:
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.configMap.redis }}
                key: hostname
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.configMap.redis }}
                key: port
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                  name: {{ .Values.secretKey.redis }}
                  key: db_password
          - name: GPT2_MODEL
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.configMap.modelServer }}
                key: gpt2_model


---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.appName.model }}
spec:
  selector:
    app: {{ .Values.appName.model }}
  ports:
  - port: {{ .Values.port.modelServer }}
    targetPort: {{ .Values.port.modelServer }}
